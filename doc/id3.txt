*id3.txt*	Edit an mp3/flac/opus file's metadata

==============================================================================
CONTENTS                                                    *id3*   *id3-contents*

    Installation................................: |id3-installation|
    Usage.......................................: |id3-usage|
    Settings....................................: |id3-settings|
    Issues......................................: |id3-issues|


==============================================================================
INSTALLATION                                                  *id3-installation*

The easiest way to install the plugin is with a plugin manager:

- vim-plug: https://github.com/junegunn/vim-plug
- Vundle:   https://github.com/VundleVim/Vundle.vim

If you use one, just follow the instructions in its documentation.

You can install the plugin yourself using Vim's |packages| functionality by
cloning the project (or adding it as a submodule) under
`~/.vim/pack/<any-name>/start/`. For example:
>
    git clone https://github.com/AndrewRadev/id3.vim ~/.vim/pack/_/start/id3
<
This should automatically load the plugin for you on Vim start. Alternatively,
you can add it to `~/.vim/pack/<any-name>/opt/` instead and load it in your
.vimrc manually with:
>
    packadd id3
<
If you'd rather not use git, you can download the files from the "releases"
tab and unzip them in the relevant directory:
https://github.com/AndrewRadev/id3.vim/releases.


==============================================================================
USAGE                                                                *id3-usage*

Edit an mp3 file. You'll see a buffer with its metadata stored as ID3 tags,
formatted like this:
>
    File: Christiaan Bakker - Elevator Music Attempt #1.mp3
    =======================================================

    Title:    Elevator Music Attempt #1
    Artist:   Christiaan Bakker
    Album:    Echoes From The Past
    Track No:
    Year:
    Genre:    (255)
    Comment:  http://www.jamendo.com Attribution 3.0
<
Editing the buffer will update the tags. You can also rename the file by
changing the value in the `File:` section.

ID3-JSON ~

The plugin uses a command-line tool to read and write the metadata.
Annoyingly, the most reliable tool to do this is something I had to write
myself, because all the other ones have varying availability in different
operating systems, and/or have difficult-to-parse outputs.

If you have the Rust toolchain installed, you can install it from crates.io:

>
    $ cargo install id3-json
<

But you can also use the precompiled binary for your operating system from the
releases tab in github: <https://github.com/AndrewRadev/rust-id3-json/releases>.

If the tool is in your PATH, it should work, but if you'd rather encapsulate
it in your vimfiles or inside of your plugin installation, you can put it in
any folder in Vim's runtime and set this variable:
>
    let g:id3_executable_directory = 'vendor'
<
In this particular example, the plugin might find it in
`~/.vim/vendor/id3-json`. This same lookup will work for all the other tools,
just in case you'd like to build those from source and encapsulate them here
as well.

Other mp3 tools ~

If you'd rather not install a special executable for it, you could use an
existing command-line tool. This plugin works with:

1. `id3`
2. `id3v2`
3. `id3tool`

You should be able to install any of these with your system's package manager,
for example on Arch Linux:
>
    pacman -S id3
<
Be warned that there are some issues with these (which is why I have my own).
The first one has mostly worked reliably for me, but it seems it's not widely
available. The `id3v2` tool works well, but some systems (including mine) have
a version that doesn't support the `-R` flag. The last one only works with v1
tags and seems to truncate data to a certain character limit.

If there are multiple tools installed, the plugin will decide which to use
based on a priority list stored in the `g:id3_mp3_backends` setting. See the
Vim help docs for details.

Flac, opus files ~

The plugin also supports FLAC and Opus files (somewhat misleadingly, since
they don't use id3 tags). For FLAC support, you'll need the `metaflac`
command, which, on Arch Linux, comes from the `flac` package:

    pacman -S flac

For opus, the plugin uses the `opustags` package which on Arch is in the AUR:
<https://aur.archlinux.org/packages/opustags>.

On other platforms, you can probably use your favorite package manager to
search for these.


==============================================================================
SETTINGS                                                          *id3-settings*

                                                            *g:id3_mp3_backends*
>
    let g:id3_mp3_backends = ['id3v2']
<
Default value: ['id3-json', 'id3', 'id3v2', 'id3tool']

This variable allows you to specify which tools to use to read and write tags
and what order to try them in. The most reliable one should be "id3-json",
because I wrote it specifically for the project. Installation instructions can
be found here: https://github.com/AndrewRadev/rust-id3-json

For flac and opus files, there's only one set of comand-line tools used (for
now), so they're not configurable at this time.

                                                    *g:id3_executable_directory*
>
    let g:id3_executable_directory = 'vendor/id3-executables'
    let g:id3_executable_directory = '/home/username/bin'
<
Default value: ''

If this path is set, the plugin will first check there for the tool to use. If
it's a relative path, the lookup will be relative to Vim's 'runtimepath'. So,
setting `vendor/id3-executables` might translate to the real path of
`~/.vim/vendor/id3-executables`.


==============================================================================
ISSUES                                                         *id3-issues*

Any issues and suggestions are very welcome on the github bugtracker:
https://github.com/AndrewRadev/id3.vim/issues


vim:tw=78:sw=4:ft=help:norl:
